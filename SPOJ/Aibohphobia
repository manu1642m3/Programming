#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
char str[6110],ptr[6110];
int L[6110][6110];
int lcs(char*,char*,int ,int );
int main()
{ int t,i,j;
   scanf("%d",&t);
    while(t--)
     { 
        scanf("%s",&str);
         
         for( j=strlen(str)-1,i=0;j>=0;j--,i++)
          ptr[i]=str[j];
          
           ptr[i]='\0';
            printf("%d\n",strlen(str)-lcs(str,ptr,strlen(str),strlen(ptr)));
     }
      return 0;
}

int lcs( char *X, char *Y, int m, int n )
{
   
   int i, j;
  
   /* Following steps build L[m+1][n+1] in bottom up fashion. Note 
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=n; j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;
  
       else if (X[i-1] == Y[j-1])
         L[i][j] = L[i-1][j-1] + 1;
  
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }
    
   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   return L[m][n];
}