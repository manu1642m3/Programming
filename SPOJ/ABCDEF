#include<stdio.h>
#include<algorithm>
using namespace std;
int A[1000];
int lhs[1200000];
int rhs[1200000];



int BinarySearch(int *array, int number_of_elements, int key)
{
        int low = 0, high = number_of_elements-1, mid;
        while(low <= high)
        {
                mid = (low + high)/2;
                if(array[mid] < key)
                {
                        low = mid + 1; 
                }
                else if(array[mid] == key)
                {
                        return mid;
                }
                else if(array[mid] > key)
                {
                        high = mid-1;
                }

        }
        return -1;
}
int main()
{ int n,l=-1,m=-1,lv,rv;
    scanf("%d",&n);
     for(int i=0;i<n;i++)
      scanf("%d",&A[i]);
      
       
      for(int i=0;i<n;i++)
       for(int j=0;j<n;j++)
        for(int k=0;k<n;k++)
         { lv=A[i]*A[j]+A[k];
            if(A[i]!=0)
             {rv=A[i]*(A[j]+A[k]);m++;rhs[m]=rv;}
             l++;
             lhs[l]=lv;
             
             
         }
         
         sort(rhs,rhs+m+1);
         sort(lhs,lhs+l+1);
          
        int count=0;
        
         for(int i=0;i<=l;i++)
          {int index,indexx;
            int lhsoccur=1,rhsoccur=1;
        
             while(i+1<=l&&lhs[i]==lhs[i+1])
              { lhsoccur++;i++;}
               
                  index = BinarySearch(rhs,m+1,lhs[i]);indexx=index; 
                    if(index!=-1)
                     {  if(index>0)
                         {while(rhs[indexx]==rhs[indexx-1]) {rhsoccur++;indexx--;if(indexx==0) break;}} indexx=index;
                       while(indexx+1<=m&&rhs[indexx]==rhs[indexx+1]) {rhsoccur++;indexx++;}
                      count+=lhsoccur*rhsoccur;
                     }
          }
          printf("%d",count);
   return 0;
}
