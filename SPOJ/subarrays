#include<stdio.h>
#include<algorithm>
using namespace std;
int construct(int ,int ,int );
int calling(int ,int ,int ,int ,int );
int A[20000000];
int tree[200000000];
int main()
{ int n,k;
   scanf("%d",&n);
    for(int i=0;i<n;i++)
     scanf("%d",&A[i]);
      scanf("%d",&k);
      construct(1,0,n-1);
      
      for(int i=0;i+k-1<n;i++)
       printf("%d ",calling(1,i,i+k-1,0,n-1));
       
       return 0;
}

int construct(int node,int a,int b)
{ if(a==b)
   {tree[node]=A[a]; return A[a];}
   
  int m= construct(2*node,a,(a+b)/2);
  int n=construct(1+2*node,1+(a+b)/2,b);
    
    tree[node]=max(m,n);
     return tree[node];
}

int calling(int node,int a,int b,int x,int y)
{ if(y<a||x>b)
   return -1;
   
    if(a<=x&&y<=b)
     return tree[node];
     
     int m=calling(2*node,a,b,x,(x+y)/2);
     int n=calling(1+2*node,a,b,1+(x+y)/2,y);
      
       return max(m,n);
}