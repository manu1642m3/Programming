#include<stdio.h>
#define lli long long 
#define MAX 300000
void merge_sort(int arr[],int n);
void merge_pass(int arr[],int temp[],int size,int n);
void merge(int arr[],int temp[],int low1,int up1,int low2,int up2);
int main()
{lli t;
 int n,A[MAX],B[MAX],i;
 
 scanf("%llu",&t);
  while(t--)
   { 
       scanf("%d",&n);
       for(i=0;i<n;i++)
        scanf("%d",&A[i]);
        for(i=0;i<n;i++)
         scanf("%d",&B[i]);
         
          merge_sort(A,n);
          merge_sort(B,n);
          
          lli sum=0;
          for(i=0;i<n;i++)
           sum+=A[i]*B[i];
           
           printf("%llu\n",sum);
   }
   
   return(0);
}

void merge_sort(int arr[],int n)
{
     int temp[MAX];
     int size=1;
     while(size<n)
      {merge_pass(arr,temp,size,n);
       size=size*2;
       merge_pass(temp,arr,size,n);
       size=size*2;
      }
}

void merge_pass(int arr[],int temp[],int size,int n)
{
     int i,low1,up1,low2,up2;
     low1=0;
     while(low1+size<n)
      {
          up1=low1+size-1;
          low2=low1+size;
          up2=low2+size-1;
          if(up2>=n)
           up2=n-1;
           merge(arr,temp,low1,up1,low2,up2);
           low1=up2+1;
      }
      for(i=low1;i<=n-1;i++)
         temp[i]=arr[i];
}

void merge(int arr[],int temp[],int low1,int up1,int low2,int up2)
{           int  i=low1;
             int j=low2;
             int k=low1;
                
                 while(i<=up1&&j<=up2)
                  {if(arr[i]<=arr[j])
                      temp[k++]=arr[i++];
                    else temp[k++]=arr[j++];
                  }
                  
                  while(i<=up1)
                   temp[k++]=arr[i++];
                  while(j<=up2) 
                   temp[k++]=arr[j++];
             
}
